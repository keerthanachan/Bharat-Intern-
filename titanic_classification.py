# -*- coding: utf-8 -*-
"""Titanic Classification

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15JBko3RNBxVbMBu69F_p6XKbZT1Fd1_0

***2.) Titanic Classification***
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

data = pd.read_csv('/content/tested.csv')

print(data.head())

print(data.describe())

print(data.isnull().sum())

data = data.dropna()

sns.histplot(data['Age'], bins=20)
plt.title('Age Distribution')
plt.show()

sns.countplot(data=data, x='Sex', hue='Survived')
plt.title('Survival by Gender')
plt.show()

correlation_matrix = data.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

sns.boxplot(data=data, x='Pclass', y='Age')
plt.title('Age Distribution by Pclass')
plt.show()

sns.pairplot(data, hue='Survived', diag_kind='kde')
plt.title('Pair Plot')
plt.show()

features = ['Pclass', 'Age', 'Sex']

X = data[features]
y = data['Survived']

X_encoded = pd.get_dummies(X, columns=['Sex'], drop_first=True)
X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy}")